{"remainingRequest":"/Users/huahaidong/Desktop/homework/tx_gdut_monitor/monitor-web/monitor-txui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huahaidong/Desktop/homework/tx_gdut_monitor/monitor-web/monitor-txui/src/components/PieChart.vue?vue&type=style&index=0&id=63fb763c&scoped=true&lang=css&","dependencies":[{"path":"/Users/huahaidong/Desktop/homework/tx_gdut_monitor/monitor-web/monitor-txui/src/components/PieChart.vue","mtime":1644570325513},{"path":"/Users/huahaidong/Desktop/homework/tx_gdut_monitor/monitor-web/monitor-txui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/huahaidong/Desktop/homework/tx_gdut_monitor/monitor-web/monitor-txui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huahaidong/Desktop/homework/tx_gdut_monitor/monitor-web/monitor-txui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huahaidong/Desktop/homework/tx_gdut_monitor/monitor-web/monitor-txui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huahaidong/Desktop/homework/tx_gdut_monitor/monitor-web/monitor-txui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#main {\n  width: 700px;\n  height: 500px;\n  margin: auto;\n}\n.nav {\n  width: 100vw;\n  height: 100px;\n  margin: auto;\n}\n.subNav {\n  display: flex;\n  float: left;\n  width: 100%;\n  justify-content: center;\n}\n.block{\n  margin-left: 10px;\n  margin-right: 10px;\n}\n",{"version":3,"sources":["PieChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PieChart.vue","sourceRoot":"src/components","sourcesContent":["<!--\n * @Description: \n * @Autor: yzq\n * @Date: 2022-02-11 16:31:52\n * @LastEditors: yzq\n-->\n\n<!--\n * @Description: \n * @Autor: yzq\n * @Date: 2022-02-08 11:20:37\n * @LastEditors: yzq\n-->\n<template>\n  <div>\n    <div class=\"single-chart\">\n      <div :name=\"name\" id=\"main\" class=\"echart\"> pieChart </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"PieChart\",\n  data() {\n    return {\n      options: [\n        {\n          value: \"30\",\n          label: \"30m\",\n        },\n        {\n          value: \"60\",\n          label: \"60m\",\n        },\n        {\n          value: \"300\",\n          label: \"5h\",\n        },\n        {\n          value: \"720\",\n          label: \"12h\",\n        },\n        {\n          value: \"1440\",\n          label: \"24h\",\n        },\n      ],  \n    \n    };\n  },\n  computed: {\n  },\n  props: [],\n  created() {},\n  watch: {\n\n  },\n  destroyed() {\n   \n  },\n  methods: {\n    run(_rawData) {\n    echarts.registerTransform(window.ecSimpleTransform.aggregate);\n    option = {\n      dataset: [\n        {\n          id: 'raw',\n          source: _rawData\n        },\n        {\n          id: 'since_year',\n          fromDatasetId: 'raw',\n          transform: [\n            {\n              type: 'filter',\n              config: {\n                dimension: 'Year',\n                gte: 1950\n              }\n            }\n          ]\n        },\n        {\n          id: 'income_aggregate',\n          fromDatasetId: 'since_year',\n          transform: [\n            {\n              type: 'ecSimpleTransform:aggregate',\n              config: {\n                resultDimensions: [\n                  { name: 'min', from: 'Income', method: 'min' },\n                  { name: 'Q1', from: 'Income', method: 'Q1' },\n                  { name: 'median', from: 'Income', method: 'median' },\n                  { name: 'Q3', from: 'Income', method: 'Q3' },\n                  { name: 'max', from: 'Income', method: 'max' },\n                  { name: 'Country', from: 'Country' }\n                ],\n                groupBy: 'Country'\n              }\n            },\n            {\n              type: 'sort',\n              config: {\n                dimension: 'Q3',\n                order: 'asc'\n              }\n            }\n          ]\n        }\n      ],\n      title: {\n        text: 'Income since 1950'\n      },\n      tooltip: {\n        trigger: 'axis',\n        confine: true\n      },\n      xAxis: {\n        name: 'Income',\n        nameLocation: 'middle',\n        nameGap: 30,\n        scale: true\n      },\n      yAxis: {\n        type: 'category'\n      },\n      grid: {\n        bottom: 100\n      },\n      legend: {\n        selected: { detail: false }\n      },\n      dataZoom: [\n        {\n          type: 'inside'\n        },\n        {\n          type: 'slider',\n          height: 20\n        }\n      ],\n      series: [\n        {\n          name: 'boxplot',\n          type: 'boxplot',\n          datasetId: 'income_aggregate',\n          itemStyle: {\n            color: '#b8c5f2'\n          },\n          encode: {\n            x: ['min', 'Q1', 'median', 'Q3', 'max'],\n            y: 'Country',\n            itemName: ['Country'],\n            tooltip: ['min', 'Q1', 'median', 'Q3', 'max']\n          }\n        },\n        {\n          name: 'detail',\n          type: 'scatter',\n          datasetId: 'since_year',\n          symbolSize: 6,\n          tooltip: {\n            trigger: 'item'\n          },\n          label: {\n            show: true,\n            position: 'top',\n            align: 'left',\n            verticalAlign: 'middle',\n            rotate: 90,\n            fontSize: 12\n          },\n          itemStyle: {\n            color: '#d00000'\n          },\n          encode: {\n            x: 'Income',\n            y: 'Country',\n            label: 'Year',\n            itemName: 'Year',\n            tooltip: ['Country', 'Year', 'Income']\n          }\n        }\n      ]\n    };\n    myChart.setOption(option);\n    },\n\n  },\n  mounted() {\n\n    // this.run();\n  },\n  components: {},\n};\n</script>\n\n<style scoped>\n#main {\n  width: 700px;\n  height: 500px;\n  margin: auto;\n}\n.nav {\n  width: 100vw;\n  height: 100px;\n  margin: auto;\n}\n.subNav {\n  display: flex;\n  float: left;\n  width: 100%;\n  justify-content: center;\n}\n.block{\n  margin-left: 10px;\n  margin-right: 10px;\n}\n</style>\n"]}]}